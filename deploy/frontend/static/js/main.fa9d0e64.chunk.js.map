{"version":3,"sources":["lib/utils.tsx","components/context.tsx","components/draft.tsx","components/lightbox.tsx","components/postlist.tsx","components/panel.tsx","pages/home.tsx","components/settings.tsx","pages/about.tsx","components/header.tsx","components/footer.tsx","index.tsx","pages/setting.tsx","pages/404.tsx"],"names":["BaseUrl","request","url","callback","errorHandler","fetch","credentials","then","res","ok","catch","postRequest","json","method","headers","body","checkInstruction","get","status","instruction","clearStorage","window","localStorage","removeItem","setupStorage","summary","setItem","JSON","stringify","Date","AppContext","createContext","updateUser","updatePosts","setUpdateUser","setUpdatePosts","AppProvider","props","useState","Provider","value","children","UserContext","user","uid","uname","posts","marks","messages","type","setUser","UserProvider","loading","setLoading","appCtx","useContext","updateUserMsg","setUpdateUserMsg","cookieUid","Cookies","summaryStored","getItem","temp","parse","e","console","log","initUser","handleUserInfoResponse","handleError","error","lastUpdateStored","lastUpdate","diff","getTime","checkLastUpdate","initRequestCheck","useEffect","Draft","userCtx","writing","setWriting","content","setContent","anonymous","setAnonymous","isPrivate","setPrivate","btnText","setBtnText","selectedFile","setSelectedFile","sending","setSending","fileSelector","useRef","handleFileChange","event","target","files","file","alert","size","includes","checkChosenFile","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onloadend","result","toString","onerror","a","imageStr","trim","length","username","post","ctime","image","postDone","postFail","name","slice","id","className","placeholder","onFocus","onChange","onClick","ref","accept","current","click","checked","uploadPost","disabled","Lightbox","images","showModal","setShowModal","setCurrent","document","style","overflow","modal","getElementById","display","map","i","key","src","thumbnail","alt","index","moveIndex","PostList","firstRun","op","setOp","newPost","hasMore","setHasMore","Array","setPosts","minPid","setMinPid","maxPid","setMaxPid","currentPage","setCurrentPage","totalPage","setTotalPage","destUrl","setDestUrl","total","pageInfo","setPageInfo","trendingDays","setTrendingDays","getDefaultUrlByOption","location","pathname","split","pop","handleResponse","concat","parsePostResponse","parsePagedPostResponse","deletePost","pid","confirm","d","deleteDone","deleteError","reportPost","reportError","newPostList","filter","text","newUrl","reset","TrendingTitle","setDays","p","PostEntry","onDelete","onReport","width","Pagination","pages","setPages","getSinglePageLink","page","changePage","min","max","push","getPageNumbers","setShowToolbar","showComments","setShowComments","comments","setComments","marked","setMarked","attachments","MarkDone","MarkError","undefined","onMouseEnter","onMouseLeave","seconds","Math","floor","toLocaleString","getTimeElapse","owner","action","markOperation","CommentList","show","onComment","input","setInput","comment","commentDone","commentFail","sendComment","c","cid","days","first","setFirst","parseInt","Panel","setUsername","dialogOption","setDialogOption","changing","setChanging","email","password","repeatPassword","changeUnameDone","changeUnameFail","logoutDone","href","logoutError","dialog","clickChangeButton","to","LoginDialog","RegisterForm","LoginForm","getEmailInput","emailStr","test","getPasswordInput","passwordStr","repeatStr","checkPasswordsMatch","logging","setLogging","login","newUser","emailInput","passwordInput","getLoginInfo","loginDone","loginFailed","autoComplete","required","submitting","setSubmitting","submit","getRegisterInfo","registerDone","registerFailed","title","Home","newOp","Settings","nickname","setNickname","oldPassword","setOldPassword","newPassword","setNewPassword","setRepeatPassword","handleInputChange","func","checkPassword","changePasswordDone","handleRequestDone","handleRequestFail","submitNewNickname","submitNewPassword","CookiePolicy","WhyMasq","Header","keyword","setKeyword","path","setPath","changeInput","onKeyPress","code","keyCode","which","search","monitorKeyPress","Footer","getFullYear","start","Cookie","showNote","setShowNote","set","FootNote","onClose","handleClose","ReactDOM","render","exact","component","useParams"],"mappings":"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","file":"static/js/main.fa9d0e64.chunk.js","sourcesContent":["import {UserInfoForContext, UserInfo} from './interfaces';\n\n\nexport const BaseUrl = 'http://localhost:8080/';\n//export const BaseUrl = 'https://masq.xyz/api/';\n\n// Helper function to start a request. Don't forget the error handler.\nexport function request(url: string, callback: Function, errorHandler: Function) {\n    //console.log('get request to ' + url);\n\n    fetch(url, {\n        credentials: 'include',\n    }).then(res => {            \n            if (res.ok) {\n                callback(res);\n            } else {\n                errorHandler(res);\n            }\n        }).catch((res) => {\n            errorHandler(res);\n        });\n}\n\nexport function deleteRequest(url: string, callback: Function, errorHandler: Function) {\n    //console.log('delete request to ' + url);\n\n    fetch(url, {\n        credentials: 'include',\n        method: 'DELETE'\n    }).then(res => {        \n            if (res.ok) {\n                callback(res);\n            } else {\n                errorHandler(res);\n            }\n        }).catch((res) => {\n            errorHandler(res);\n        });\n}\n\nexport function postRequest(url: string, json: string,\n     callback: Function, errorHandler: Function) {\n\n        //console.log('post request to ' + url);\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: json,\n            credentials: \"include\"\n        }).then(res => {\n            checkInstruction(res.headers.get('instruction'));\n            if (res.status === 200) {\n                callback(res);\n            } else {\n                errorHandler(res);\n            }\n        }).catch(res => {\n            errorHandler(res);\n        });\n}\n\n// Generate a fake user to init the context in 'context.tsx'.\nexport function fakeUser(): UserInfo {\n    let user: UserInfo = {\n        uid: -1,\n        uname: 'Guest',\n        posts: 0,\n        marks: 0,\n        messages: 0,\n        type: -1,\n    }\n\n    return user;\n}\n\nexport function fakeUserCtx(): UserInfoForContext {\n    let user = fakeUser();\n    \n    let userCtx: UserInfoForContext = {\n        user: user,\n        setUser: nan,\n    };\n\n    return userCtx;\n\n    function nan() {\n        return;\n    }\n}\n\nexport function checkInstruction(instruction: string | null): boolean {\n    if (!instruction || instruction !== 'clear') return false;\n\n    clearStorage();\n    return true;\n}\n\nexport function clearStorage() {\n    window.localStorage.removeItem('summary');\n    window.localStorage.removeItem('lastUpdate');\n}\n\nexport function setupStorage(summary: UserInfo) {\n    localStorage.setItem('summary', JSON.stringify(summary));\n    localStorage.setItem('lastUpdate', JSON.stringify(new Date()));\n}\n\n// ctime must be any type here. Using `Date` or `number` will cause react crash.\n// Note the unit used in Date(ctime) should be millisecond.\nexport function getTimeElapse(ctime: any) {\n    let current = new Date();\n    let seconds = current.getTime()/1000 - ctime;\n    let text = '';\n    if (seconds < 60) text = 'just now';\n    else if (seconds < 60 * 60) text = Math.floor(seconds / 60) + ' mins ago';\n    else if (seconds < 24 * 60 * 60) text = Math.floor(seconds / 60 / 60) + ' hours ago';\n    else if (seconds < 365 * 24 * 60 * 60) text = Math.floor(seconds / 24 / 60 / 60) + ' days ago';\n    else text = new Date(ctime * 1000).toLocaleString();\n\n    return text;\n}","import React, {useState, useEffect, createContext, useContext} from 'react';\nimport {BaseUrl, fakeUser, fakeUserCtx, request, clearStorage, setupStorage, checkInstruction} from '../lib/utils';\nimport {UserInfo, AppInfoForContext} from '../lib/interfaces';\nimport Cookies from 'js-cookie';\n\n/**\n * This file is the ACTUAL entry point of the whole app.\n */\nexport const AppContext = createContext<AppInfoForContext>({updateUser: false, updatePosts: false, setUpdateUser: null, setUpdatePosts: null});\n\nexport function AppProvider(props: any) {\n    const [updateUser, setUpdateUser] = useState(false);\n    const [updatePosts, setUpdatePosts] = useState(false);\n\n    return (\n        <AppContext.Provider value={{updateUser, updatePosts, setUpdateUser, setUpdatePosts}}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}\n\n// Must have a default context value, so a fake user is made up in 'utils.tsx'.\nexport const UserContext = createContext(fakeUserCtx());\n\nexport function UserProvider(props: any) {\n    const [loading, setLoading] = useState(false);\n    // to provide user panel consistency, the local storage will be used to init user\n    // if it's valid, other wise user will be set as guest.\n    const appCtx = useContext(AppContext);\n    const [updateUserMsg, setUpdateUserMsg] = useState(appCtx.updateUser);\n    const [user, setUser] = useState(initUser());\n    useState(() => initRequestCheck());\n\n    useEffect(() => {\n        setUpdateUserMsg(appCtx.updateUser);\n    }, [appCtx.updateUser]);\n\n    useEffect(() => {\n        if (updateUserMsg && user.uid > 0) {\n            request(BaseUrl + 'user/summary/' + user.uid, handleUserInfoResponse, handleError);\n        } else {\n            appCtx.setUpdateUser && appCtx.setUpdateUser(false);\n        }\n    }, [updateUserMsg])\n\n    useEffect(() => {\n        if (loading && user.uid > 0)   \n            request(BaseUrl + 'user/summary/' + user.uid, handleUserInfoResponse, handleError);\n        else\n            setLoading(false);\n    }, [loading]);\n\n    function initUser(): UserInfo{\n        let summary = fakeUser();\n        let cookieUid = Cookies.get('u');\n        if (cookieUid) {\n            let summaryStored = window.localStorage.getItem('summary');\n            if (summaryStored) {\n                try {\n                    let temp: UserInfo = JSON.parse(summaryStored);\n                    if (temp.uid === +cookieUid)\n                        summary = temp;\n                    else\n                        window.localStorage.removeItem('summary');\n                } catch (e) {\n                    console.log('Cannot parse local stored content to user summary: ' + e);\n                }\n            } else {\n                summary.uid = +cookieUid;\n            }\n        }\n        \n        return summary;\n    }\n\n    function initRequestCheck() {\n        if (user.uid <= 0) {\n            clearStorage();\n            return;\n        }\n        // if the info in local storage expired, start a request.\n        if (!checkLastUpdate())\n            setLoading(true);\n        // if has cookie but no summary in local storage, start a request.\n        if (Cookies.get('u') && !window.localStorage.getItem('summary'))\n            setLoading(true);\n    }\n\n    function checkLastUpdate(): boolean {\n        let lastUpdateStored = window.localStorage.getItem('lastUpdate');\n        if (!lastUpdateStored) return false;\n\n        let lastUpdate = new Date(JSON.parse(lastUpdateStored));\n        if (!lastUpdate) return false;\n\n        let current = new Date();\n        let diff = current.getTime() - lastUpdate.getTime();\n        if (!diff || diff > 60 * 60 * 1000) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function handleUserInfoResponse(res: globalThis.Response) {\n        if (checkInstruction(res.headers.get('instruction'))) {\n            setUser(fakeUser());\n        }\n        \n        res.json()\n        .then((summary: UserInfo) => {\n            setupStorage(summary);\n            setUser(summary);\n            setLoading(false);\n            appCtx.setUpdateUser && appCtx.setUpdateUser(false);\n        }).catch(() => {\n            console.log('Cannot parse json!\\n' + res);\n        })\n    }\n\n    function handleError(res: globalThis.Response) {\n        console.error(res);\n    }\n\n    return (\n        <UserContext.Provider value={{user, setUser}}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\n","import React, {useState, useEffect, ChangeEvent, useContext, useRef} from 'react';\nimport { PostRequest} from '../lib/interfaces';\nimport { AppContext, UserContext } from './context';\nimport { postRequest, BaseUrl } from '../lib/utils';\nimport './draft.css';\n\n/**\n * TODO: form submit validation;\n *       file size limit.\n */\nexport default function Draft() {\n    const appCtx = useContext(AppContext);\n    const userCtx = useContext(UserContext);\n    const [user, setUser] = useState(userCtx.user);\n    const [writing, setWriting] = useState(false);\n    const [content, setContent] = useState('');\n    const [anonymous, setAnonymous] = useState(false);\n    const [isPrivate, setPrivate] = useState(false);\n    const [btnText, setBtnText] = useState('Choose image');\n    const [selectedFile, setSelectedFile] = useState<File | null>(null);\n    const [sending, setSending] = useState(false);\n    const fileSelector = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        setUser(userCtx.user);\n    }, [userCtx]);\n\n    useEffect(() => {\n        let limit = 15;     // max length of the text shown on the 'Choose image' button.\n\n        if (selectedFile) {     // means 'selectedFile' is not null, undefined, 0, empty or false.\n            let name = selectedFile.name;\n            if (name.length > limit) name = '..' + name.slice(-limit, );\n            setBtnText(name);\n        } else {\n            setBtnText('Choose image');\n        }\n    }, [selectedFile]);\n\n    function triggerSelectFile(): void {\n        if (fileSelector && fileSelector.current) {\n            fileSelector.current.click();\n        }\n    }\n\n    function handleFileChange(event: ChangeEvent<HTMLInputElement>) {\n        if (event.target.files) {\n            let file = event.target.files[0];\n            if (checkChosenFile(file)) {\n                setSelectedFile(file);\n            }\n        }\n    }\n\n    function checkChosenFile(file: File): boolean {\n        if (!file) {\n            alert('No file found.');\n            return false;\n        }\n        if (file.size > 5 * 1024 * 1024) {\n            alert('Max file size is 5MB.');\n            return false;\n        } else if (!file.type.includes('image')) {\n            alert('Only image file allowed.');\n            return false;\n        }\n\n        return true;\n    }\n\n\n    function handleTextChange(event: ChangeEvent<HTMLTextAreaElement>, func: Function) {\n        func(event.target.value);\n    }\n\n    function toBase64(file: File) {\n        return new Promise<string>((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onloadend = () => {\n                if (reader && reader.result)\n                    resolve(reader.result.toString());\n            }\n\n            reader.onerror = reject;\n        });\n    }\n\n    async function uploadPost() {\n        let imageStr = '';\n        if (selectedFile) {\n            if (user.type <= 0) {\n                alert('Sorry, you cannot upload images, please remove it');\n                return;\n            } else {\n                imageStr = await toBase64(selectedFile); \n            }\n        } else if (content.trim().length === 0) {\n            alert('No content found.');\n            return;\n        }\n\n        let username = (anonymous)? 'Anonymous': user.uname;\n        const post: PostRequest = {\n            uid: (user.uid)? user.uid: -1,\n            uname: username,\n            anonymous: anonymous,\n            content: content,\n            ctime: new Date(),\n            status: (isPrivate)? 0: 1,\n            image: (imageStr)? imageStr: null,\n        };\n\n        setSending(true);\n        postRequest(BaseUrl + 'posts', JSON.stringify(post), postDone, postFail);\n    }\n\n    // TODO: refresh postlist.\n    function postDone(res: globalThis.Response) {\n        setContent('');\n        setSelectedFile(null);\n        setSending(false);\n        if (appCtx.setUpdatePosts) {\n            appCtx.setUpdatePosts(true);\n        }\n        if (appCtx.setUpdateUser) {\n            appCtx.setUpdateUser(true);\n        }\n    }\n\n    function postFail(res: globalThis.Response) {\n        setSending(false);\n        alert(res);\n    }\n\n    return (\n        <div id='draft_area'>\n            <span>Write a post:<br/></span>\n            <textarea name='draft' value={content} className={writing? 'selected': ''}\n                placeholder='Share your thought' onFocus={() =>setWriting(true)}\n                onChange={(e) => handleTextChange(e, setContent)} />\n            <button className={writing? '': 'hidden'} onClick={() => setWriting(false)}>Collapse</button>\n            <div id='draft_toolbar' className={writing? '': 'hidden'}>\n                {user.type > 0 && <input type='file' id='file' name='file' ref={fileSelector} accept='.jpg,.jpeg,.png,.bmp,.gif' onChange={(e) => handleFileChange(e)} />}\n                {user.type > 0 && <button id='select_file' onClick={() => triggerSelectFile()}>{btnText}</button>}\n                <input type='checkbox' name='is_anonymous' checked={anonymous} onChange={() => setAnonymous(!anonymous)}/>\n                <label>Anonymous</label>\n                <input type='checkbox' name='is_private' checked={isPrivate} onChange={() => setPrivate(!isPrivate)} />\n                <label>Private</label>\n                {!sending && <button onClick={() => uploadPost()}>Send</button>}\n                {sending && <button disabled>Send</button>}\n            </div>\n        </div>\n    );\n}","import React, {useState, useEffect} from 'react';\nimport { ImageList } from '../lib/interfaces';\nimport { BaseUrl } from '../lib/utils';\nimport './lightbox.css';\n\n\n/**\n ** Currently only one image is used in lightbox.\n */\nexport default function Lightbox(props: ImageList) {\n    const [images] = useState(props.value);\n    const [length] = useState(props.value.length);\n    const [showModal, setShowModal] = useState(false);\n    const [current, setCurrent] = useState(0);\n\n    useEffect(() => {\n        // note this line should put before modal check to \n        // prevent the scrollbar from missing after closing a modal.\n        document.body.style.overflow = (showModal)? 'hidden': 'auto';\n\n        let modal = document.getElementById('lightbox');\n        if (!modal) return;\n        modal.style.display = (showModal)? 'block': 'none';\n    }, [showModal]);\n\n    if (!images || length === 0) return null;\n\n    function moveIndex(index: number) {\n        let temp = current + index;\n        if (temp < 0) temp += length;\n        if (temp >= length) temp -= length;\n        setCurrent(temp);\n    }\n\n    return (\n        <>\n            <div className=\"attachments\">\n                {images.map((i, id) => <img key={id} src={BaseUrl + i.thumbnail} alt=''\n                 onClick={() => {setCurrent(id); setShowModal(true)}}/>\n                )}\n            </div>\n            \n            {showModal && (\n                <div id='lightbox' className='lightbox'>\n                    <span className=\"close cursor\" onClick={() => setShowModal(false)}>&times;</span>\n                    <img src={BaseUrl + images[current].url} alt='' onClick={() => moveIndex(1)} />\n                </div>\n            )}\n        </>\n    )\n\n}","import React, {useState, useEffect, useRef, useContext, ChangeEvent} from 'react';\nimport {Post, Comment, PostsResponse, PagedPostsResponse, CommentsResponse, PostProps, \n    PageOptionProps, CommentProps, PageInfo, PageInfoProps} from '../lib/interfaces';\nimport {AppContext, UserContext} from './context';\nimport Lightbox from './lightbox';\nimport {BaseUrl, request, deleteRequest, checkInstruction, fakeUser, postRequest, getTimeElapse} from '../lib/utils';\nimport './postlist.css';\n\n/**\n * TODO: comments, update state from child components..\n * TODO: when user clicks mark or delete a post in the list, it should reflect on the panel component.\n * TODO: display different elements according to the 'op' value passed from 'home.tsx'.\n * The full work flow looks as below:\n *  User clicks a page -> props changes -> reset() except firstRun -> op change triggers setDestUrl() -> triggers setLoading();\n *  User clicks a link -> setDestUrl() -> triggers setLoading();\n *  Finally, setLoading() triggers request().\n */\nexport default function PostList(props: PageOptionProps) {\n    const appCtx = useContext(AppContext);\n    const userCtx = useContext(UserContext);\n    const firstRun = useRef(true);\n    const [op, setOp] = useState(props.op);\n    //TODO: wait for websocket implementation.\n    const [newPost, setNewPost] = useState(0);  \n    const [hasMore, setHasMore] = useState(false);\n    const [posts, setPosts] = useState(new Array<Post>());\n    const [minPid, setMinPid] = useState(-1);\n    const [maxPid, setMaxPid] = useState(-1);\n    const [currentPage, setCurrentPage] = useState(0);\n    const [totalPage, setTotalPage] = useState(0);\n    const [destUrl, setDestUrl] = useState<string>();\n    const [loading, setLoading] = useState(false);\n    const [pageInfo, setPageInfo] = useState<PageInfo>(defaultPageInfo());\n    const [trendingDays, setTrendingDays] = useState(1);\n\n    useEffect(() => {\n        if (appCtx.updatePosts) {\n            setDestUrl(BaseUrl + 'posts?max=' + maxPid);\n        }\n    },[appCtx.updatePosts]);\n\n    // monitor the page change by the 'props' value.\n    // Use 'useRef()' to skip the update following the first render.\n    useEffect(() => {\n        if (firstRun.current) {\n            firstRun.current = false;\n            return;\n        }\n        \n        reset();\n    }, [props]);\n\n    // op change always means a new page, so construct default url here.\n    useEffect(() => {\n        let url = getDefaultUrlByOption(op);\n        if (op === 4) {\n            console.log('trending days: ', trendingDays);\n            url += '?days=' + trendingDays;\n            console.log(url);\n        }\n        setDestUrl(url);\n    }, [op, trendingDays]);\n\n    useEffect(() => {\n        if (destUrl) setLoading(true);\n    }, [destUrl]);\n\n    // 'loading' value triggers the request.\n    useEffect(() => {\n        // If user has no permission on current page, stop requesting.\n        if (!validateUser()) {\n            setLoading(false);\n            return;\n        }\n        // Typescript will complain if `destUrl` is not checked.\n        if (loading && destUrl) {\n            request(destUrl, handleResponse, handleError); \n        } \n    }, [loading]);\n\n    useEffect(() => {\n        let pageInfo: PageInfo = {\n            uid: userCtx.user.uid,\n            current: currentPage,\n            total: totalPage,\n            op: op,\n            setDestUrl: setDestUrl,\n        };\n\n        setPageInfo(pageInfo);\n    }, [op, currentPage, totalPage, userCtx])\n\n    function defaultPageInfo(): PageInfo {\n        let pageInfo: PageInfo = {\n            uid: -1,\n            current: 0,\n            total: 0,\n            op: 0,\n            setDestUrl: setDestUrl,\n        }\n\n        return pageInfo;\n    }\n\n    \n    function getDefaultUrlByOption(op: number): string {\n        let url = '';\n        let uid = userCtx.user.uid;\n        switch (op) {\n            case 1:\n                // get posts from the current user.\n                url = BaseUrl + 'posts/user/' + uid;\n                break;\n            case 2:\n                // get marks from the current user.\n                url = BaseUrl + 'marks/user/' + uid;\n                break;\n            case 3:\n                // search for a keyword.\n                url = BaseUrl + 'posts/search/' + getSearchKeyword();\n                break;\n            case 4:\n                url = BaseUrl + 'trending';\n                break;\n            default:\n                url = BaseUrl + 'posts';\n        }\n\n        return url;\n    } \n\n    function getSearchKeyword() {\n        let keyword = window.location.pathname.split('/').pop();\n        return keyword;\n    }\n\n    function reset(): void {\n        setPosts(new Array<Post>());\n        setHasMore(false);\n        setMinPid(-1);\n        setMaxPid(-1);\n        // If user click 'Home' in home page, the 'op' value will not change nor does it trigger the request.\n        if (props.op !== op) {\n            setOp(props.op); \n            return;\n        } \n\n        //if the current url === default url, the trigger will not work as well.\n        let newUrl = getDefaultUrlByOption(op);\n        if (newUrl === destUrl) {\n            setLoading(true);\n        } else { \n            setDestUrl(newUrl);\n        }  \n    }\n\n    function validateUser() {\n        let uid = userCtx.user.uid;\n        // Unlogged users are not allowed to see '/posts' or '/marks' or others later.\n        if (uid <= 0 && (op === 1 || op === 2)) return false;\n        return true;\n    }\n\n    // Don't forget to handle the error of 'json()'.\n    function handleResponse(res: globalThis.Response): void {\n        if (!res) return;   // get null response.\n        if (checkInstruction(res.headers.get('instruction'))) {\n            userCtx.setUser(fakeUser());\n        }\n\n        if (props.op === 0) parsePostResponse(res);\n        else parsePagedPostResponse(res);\n    }\n\n    function parsePagedPostResponse(res: globalThis.Response) {\n        res.json().then(\n            (result: PagedPostsResponse) => {\n                if (!result) return;\n\n                setCurrentPage(result.currentPage);\n                setTotalPage(result.totalPage);\n                setPosts(result.posts);\n                setLoading(false);\n            }\n        ).catch( e => {\n            console.log('Cannot parse paged post from: ' + res);\n            setLoading(false);\n        });\n    }\n\n    function parsePostResponse(res: globalThis.Response) {\n        res.json().then(\n            (result: PostsResponse) => {\n                if (!result) return;\n\n                if (appCtx.updatePosts && appCtx.setUpdatePosts) {\n                    if (result.posts.length > 0) {\n                        let temp = result.posts.concat(posts.slice()); \n                        setPosts(temp);\n                    } else {\n                    // if the notification to update posts is received, but the response result is empty,\n                    // it's because the user send a private post. In this case, the maxPid still needs to\n                    // update to avoid the React fails in checking data change in future request.\n                        setMaxPid(maxPid + 1);\n                    }\n                    appCtx.setUpdatePosts(false); \n                } else {\n                    setPosts(posts.concat(result.posts));\n                }\n\n                if (result.hasMore !== null) setHasMore(result.hasMore);\n                if (result.maxPid > maxPid) setMaxPid(result.maxPid);\n                if (result.minPid > 0 && (minPid > result.minPid || minPid <= 0)) setMinPid(result.minPid);\n                setLoading(false);\n                // No matter what response got, loading is finished. Same in catch block.\n            }\n        ).catch(() => {\n            setDestUrl('');\n            console.error('json parse error!\\n' + res.body);\n            setLoading(false);\n        });\n    }\n\n    function handleError(res: globalThis.Response): void {\n        setLoading(false);\n        console.error(res);\n    }\n\n    function loadMore(): void {\n        setDestUrl(BaseUrl + 'posts?min=' + minPid);\n    }\n\n    function deletePost(pid: number): void {  // TODO: ask user to confirm and send request to server.\n        let confirmDelete = window.confirm('Confirm to delete it?');\n\n        if (confirmDelete) {\n            deleteRequest(BaseUrl + 'posts/' + pid, (d: any) => deleteDone(pid), deleteError);\n        }\n    }\n\n    function reportPost(pid: number): void {\n        let confirmReport = window.confirm('Confirm to report this post?');\n\n        if (confirmReport) {\n            postRequest(BaseUrl + 'report/' + pid, '', (d: any) => deleteDone(pid), reportError);\n        }\n    }\n\n    function deleteDone(pid: number) {\n        let newPostList = posts.filter(post => post.pid !== pid);\n        setPosts(newPostList);\n        appCtx.setUpdateUser && appCtx.setUpdateUser(true);\n\n    }\n\n    function deleteError(res: globalThis.Response) {\n        alert('Delete post error: ' + res);\n    }\n\n    function reportError(res: globalThis.Response) {\n        res.text().then((result: string) => alert(result));\n    }\n\n    // Note loading.svg should be put under the postlist to prevent re-render when requesting for more posts.\n    return (\n        <div id='post_list'>\n            {op === 4 && <TrendingTitle value={trendingDays} setDays={setTrendingDays}/> }\n            {op === 0 && newPost > 0 && <button id='btn_loadnew'>Load {newPost} new posts</button>}\n            {posts.map((p) => <div className='post' key={p.pid}><PostEntry value={p} onDelete={deletePost} onReport={reportPost} key={p.pid}/><hr/></div>)}   \n            {loading && op === 0 && <div className='loading-img'><img src='/images/loading.svg' alt='loading' width='100px'/></div>}\n            {!loading && posts.length === 0 && <div className='center'><h3>No posts found.</h3></div>}\n            {hasMore && maxPid > 0 && !loading && <button id='btn_loadmore' onClick={() => loadMore()}>Load More</button>}\n            {op > 0 && !loading && <Pagination value={pageInfo} />}\n        </div>\n    );\n\n}\n\nfunction Pagination(props: PageInfoProps) {\n    const [pageInfo, setPageInfo] = useState(props.value);\n    const [pages, setPages] = useState<number[]>([]);\n\n    useEffect(() => {\n        setPageInfo(props.value);\n    }, [props]);\n\n    useEffect(() => {\n        if (pageInfo.total <= 0) {\n            setPages([]);\n        } else {\n            setPages(getPageNumbers(pageInfo.current, pageInfo.total));\n        }\n\n    }, [pageInfo]);\n\n    function getPageNumbers(current: number, total: number): number[] {\n        let pages: number[] = [];\n        let min = current;\n        let max = current;\n\n        for (let i = 0; i < 2; i++) {\n            if (min - 1 > 0) min--;\n            else if (max + 1 <= total) max++;\n            if (max + 1 <= total) max++;\n            else if(min - 1 > 0) min--;\n        }\n\n        for (let i = min; i <= max; i++){\n            pages.push(i);\n        }\n\n        return pages;\n    }\n\n    function getSinglePageLink(p: number) {\n        if (p !== pageInfo.current) {\n            return (\n                <a key={p} onClick={() => changePage(p)}>&nbsp;{p}&nbsp;</a>\n            );\n        } else {\n            return (\n                <span key={p}>&nbsp;{p}&nbsp;</span>\n            )\n        }\n    }\n\n    function changePage(page: number) {\n        if (page < 0 || page > pageInfo.total) return;\n\n        let url = '';\n        switch (pageInfo.op) {\n            case 1:\n                url = BaseUrl + 'posts/user/' + pageInfo.uid + '?page=' + page;\n                break;\n            case 2:\n                url = BaseUrl + 'marks/user/' + pageInfo.uid + '?page=' + page;\n                break;\n            default:\n                break;\n        }\n\n        pageInfo.setDestUrl(url);\n    }\n\n    return (\n        <div id='page_no'>\n            {pages.map(p => getSinglePageLink(p))}\n        </div>\n    )\n}\n\n//TODO: init lightbox images.\nfunction PostEntry(props: PostProps) {\n    const post = props.value;\n    const appCtx = useContext(AppContext);\n    const [showToolbar, setShowToolbar] = useState(false);\n    const [showComments, setShowComments] = useState(false);\n    const [comments, setComments] = useState(post.comments);\n    const [marked, setMarked] = useState(post.marked);\n    const [images] = useState(post.attachments);   //TODO: needs to init.\n\n    function markOperation() {\n        let action = (marked)? 'unmark': 'mark';\n        request(BaseUrl + 'marks?pid=' + post.pid + '&action=' + action, MarkDone, MarkError);\n    }\n\n    function MarkDone(res: globalThis.Response) {\n        appCtx.setUpdateUser && appCtx.setUpdateUser(true);\n        setMarked(!marked);\n    }\n\n    function MarkError(res: globalThis.Response) {\n        res.text().then(e => alert(e));\n    }\n\n    function toggleShowComments() {\n        setShowComments(!showComments);\n    }\n\n    function deleteCurrent() {\n        props.onDelete(post.pid);\n    }\n\n    function reportCurrent() {\n        props.onReport(post.pid);\n    }\n\n    function addComment() {\n        setComments(comments + 1);\n    }\n\n    if (post === null || post === undefined) return null;\n\n    return (\n        <div className='post_entry' onMouseEnter={() => setShowToolbar(true)} onMouseLeave={() => setShowToolbar(false)}>\n            <div className='author'>{post.uname} said:</div>\n            <div className='content'>{post.content}</div>\n            {images && <Lightbox value={images} />}\n            <div className='foot'>\n                <span>{getTimeElapse(post.ctime)}</span>\n                <span className='toolbar'>\n                    {!post.owner && <a onClick={() => reportCurrent()}>Report</a>}&nbsp;\n                    {post.owner && <a onClick={() => deleteCurrent()}>Delete</a>}\n                    &nbsp;<a onClick={() => markOperation()}>{marked? 'Marked': 'Mark'}</a>\n                    &nbsp;<a onClick={() => toggleShowComments()}>Comments({comments})</a>\n                </span>\n            </div>\n            <CommentList value={post} show={showComments} onComment={()=> addComment()}/>\n        </div>\n    );\n}\n\nfunction CommentList(props: CommentProps) {\n    const post = props.value;\n    const show = props.show;\n    const userCtx = useContext(UserContext);\n    const [comments, setComments] = useState(new Array<Comment>());\n    const [input, setInput] = useState('');\n    const [sending, setSending] = useState(false);\n    //const [hasMore, setHasMore] = useState(false);\n    //const [minCid, setMinCid] = useState(-1);\n    \n    useEffect(() => {\n        if (!show || post.comments <= 0) return;\n        request(BaseUrl + 'comments/' + post.pid, handleResponse, handleError);\n    }, [show]);\n\n    useEffect(() => {\n        if (sending) sendComment();\n        else setInput('');\n    }, [sending]);\n\n    if (!show || !post) return null;\n\n    function handleResponse(res: globalThis.Response): void {\n        res.json().then(\n            (result: CommentsResponse) => {\n                if (result === null) return;\n\n                setComments(result.comments.slice());\n                //props.onComment();\n                //setHasMore(result.hasMore);\n                //if (minCid > result.minCid || minCid <= 0) setMinCid(result.minCid);\n            }\n        ).catch((e) => {\n            console.log('Cannot parse comments response.');\n        })\n    }\n\n    function handleError(res: globalThis.Response): void {\n        console.error(res);\n    }\n\n    function onCommentChange(event: ChangeEvent<HTMLTextAreaElement>) {\n        setInput(event.target.value);\n    }\n\n    function sendComment() {\n        if (input.trim().length === 0) {\n            alert('No content in comment area to send.');\n            setSending(false);\n            return;\n        }\n\n        let comment: Comment = {\n            pid: (post.pid)? post.pid: -1,\n            uid: userCtx.user.uid,\n            uname: userCtx.user.uname,\n            content: input,\n            ctime: new Date(),\n        };\n\n        postRequest(BaseUrl + 'comments/' + post.pid, JSON.stringify(comment), commentDone, commentFail);\n    }\n\n    function commentDone(res: globalThis.Response) {\n        res.json()\n            .then((comment: Comment) => {\n                let temp = comments.slice().concat(comment);\n                setComments(temp);\n                setSending(false);\n                props.onComment();\n            });\n    }\n\n    function commentFail(res: globalThis.Response) {\n        setSending(false);\n        alert(res);\n    }\n\n    return (\n        <div className='comment'>\n            {comments.map((c) => <p key={c.cid}>{c.content} --by {c.uname}</p>)}\n            <textarea name='comment' onChange={(e) => onCommentChange(e)} value={input} />\n            {!sending && <button onClick={() => setSending(true)}>Send</button>}\n            {sending && <button disabled>Send</button>}\n        </div>\n    )\n}\n\nfunction TrendingTitle(props: any) {\n    const [days, setDays] = useState(props.value);\n    const [first, setFirst] = useState(true);\n\n    useEffect(() => {\n        if (first) setFirst(false);\n        else props.setDays(days);\n    }, [days])\n\n    return (\n        <div className='trending_header'>\n            <p className='trending_title'>Trending Posts</p>\n            <div className='options'>\n            <label>Date range: </label>\n            <select onChange={(e) => setDays(parseInt(e.target.value))} value={days.toString()}>\n                <option value='1'>One day</option>\n                <option value='7'>One week</option>\n                <option value='30'>one month</option>\n            </select>\n            </div>\n            <hr />\n        </div>\n    )\n}","import React, {useState, useEffect, useContext, useRef, ChangeEvent} from 'react';\nimport {Link} from 'react-router-dom';\nimport {fakeUser, BaseUrl, postRequest, request, clearStorage, setupStorage} from '../lib/utils';\nimport {UserContext} from './context';\nimport './panel.css';\nimport { UserInfo } from '../lib/interfaces';\n\n/**\n * TODO: disable the buttons after user clicks.\n */\nexport default function Panel() {\n    const userCtx = useContext(UserContext);        // Note the 'userCtx' is a context while 'user' is a local variable.\n    const [user, setUser] = useState(userCtx.user);\n    const [username, setUsername] = useState(user.uname);   //used to monitor the username change.\n    const [dialogOption, setDialogOption] = useState(0);    // control login or sign up dialog to show. 0 means hide.\n    const [changing, setChanging] = useState(false);\n    // Below varibles are used for login and register form.\n    // Note the type 'HTMLInputElement' is necessary to prevent 'possible null object' warnings.\n    const email = useRef<HTMLInputElement>(null);\n    const password = useRef<HTMLInputElement>(null);\n    const repeatPassword = useRef<HTMLInputElement>(null);\n    const uname = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n        let dialog = document.getElementById('login-dialog');\n        if (!dialog) return;\n\n        dialog.style.display = (dialogOption > 0)? 'block': 'none';\n    }, [dialogOption]);\n\n    useEffect(() => {\n        setUser(userCtx.user);\n    }, [userCtx]);\n\n    useEffect(() => {\n        setUsername(user.uname);\n    }, [user]);\n\n    function clickChangeButton() {\n        if (changing && username !== user.uname) {\n            // TODO: validate input and send new username to server.\n            let body = {\"uname\": username};\n            postRequest(BaseUrl + 'user/' + user.uid + '/uname', JSON.stringify(body),\n                changeUnameDone, changeUnameFail);\n        } \n\n        setChanging(!changing);\n    }\n\n    function changeUnameDone(res: globalThis.Response) {\n        res.json()\n            .then((summary: UserInfo) => {\n                userCtx.setUser(summary);\n                setupStorage(summary);\n            }).catch(() => {\n                console.log('Cannot parse json!\\n' + res);\n            });\n    }\n\n    function changeUnameFail(res: globalThis.Response) {\n        res.text()\n            .then((result) => {\n                alert(result);\n                setUsername(user.uname);\n            });\n    }\n\n    function handleUnameChange(event: ChangeEvent<HTMLInputElement>) {\n        setUsername(event.target.value);\n    }\n\n    function logOut() {\n        let confirm = window.confirm('Confirm to log out?');\n        if (confirm) {\n            request(BaseUrl + 'user/logout', logoutDone, logoutError);\n        } \n    }\n\n    function logoutDone(res: globalThis.Response) {\n        res.text().then((text: string) => {\n            if (text.includes('Success')) {\n                clearStorage();\n                window.location.href = '/';\n            } else {\n                alert('Logout failed, please try again.');\n            }\n        }).catch(() => {\n            alert('Logout failed, please try again.');\n        })\n    }\n\n    function logoutError() {\n        alert('Logout failed, please try again.');\n    }\n\n    return (\n        <div className='aside'>\n            <div className='panel'>\n                <p />\n                {!changing && <div id='nickname'>{username}</div>}\n                {changing && <input value={username} onChange={(e) => handleUnameChange(e)} />}\n                {user.uid > 0 && <button id='btn_change_name' onClick={() => clickChangeButton()}>{changing? 'Submit': 'Change'}</button>}\n                <hr />\n                <ul>\n                    <li>Posts: {(user.posts > 0)? <Link to='/posts'>{user.posts}</Link> : 0}</li>\n                    <li>Marks: {(user.marks > 0)? <Link to='/marks'>{user.marks}</Link> : 0}</li>\n                    <li>Messages: {(user.messages > 0)? user.messages : 0}</li>\n                </ul>\n                <hr />\n                <div className='center'>\n                    {user.uid > 0 && <button id='button_logout' onClick={() => logOut()}>Logout</button>}\n                    {user.uid <= 0 && \n                        <><button className='btn_login' onClick={() => setDialogOption(1)}>Log in</button>\n                        <button className='btn_login' onClick={() => setDialogOption(2)}>Sign up</button></>}\n                </div>\n            </div>\n            <LoginDialog />\n        </div>\n    );\n\n    // Children components.\n    function LoginDialog() {\n        return (\n            <div id='login-dialog' className='login-dialog'>\n            <div className='dialog-content'>\n                {(dialogOption === 2)? <RegisterForm />: <LoginForm />}\n            </div>\n        </div>\n        );\n    }\n\n    function getEmailInput(): string {\n        if (!email || !email.current || !email.current.value) {\n            alert('Empty email not allowed!');\n            return '';\n        }\n\n        const emailStr = email.current.value;\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(emailStr)) {\n            alert('Invalid email input!')\n            return '';\n        }\n\n        return emailStr;\n    }\n\n    // op === 0 means login, so no need to check passwords match.\n    function getPasswordInput(op: number): string {\n        if (!password || !password.current || !password.current.value) {\n            alert('Empty password not allowed!');\n            return '';\n        }\n        let passwordStr = password.current.value;\n\n        if(op === 1 && !checkPasswordsMatch(passwordStr)) {\n            return '';\n        }\n\n        if (!/^\\S{8,64}$/.test(passwordStr)){\n            alert('Password must be longer than 8!');\n            return '';\n        }\n\n        if (!/\\d+/.test(passwordStr) || !/[a-zA-Z]+/.test(passwordStr)) {\n            alert('Password must have at least one digit and one character!');\n            return '';\n        }\n\n        return passwordStr;\n    }\n\n    function checkPasswordsMatch(password: string): boolean {\n        if (!repeatPassword || !repeatPassword.current || !repeatPassword.current.value) {\n            alert('Empty repeat password not allowed!');\n            return false;\n        }\n        let repeatStr = repeatPassword.current.value;\n\n        if(password !== repeatStr) {\n            alert('Password and repeat password not match!');\n            return false;\n        }\n\n        return true;\n    }\n    \n    function LoginForm() {\n        const [logging, setLogging] = useState(false);\n\n        function login() {\n            const newUser = getLoginInfo();\n            if (!newUser.email || !newUser.password) return;\n            setLogging(true);\n            postRequest(BaseUrl + 'user/login', JSON.stringify(newUser),\n                    loginDone, loginFailed);\n        }\n\n        function loginDone(res: globalThis.Response) {\n            setLogging(false);\n            res.json()\n                .then((summary: UserInfo) => {\n                    userCtx.setUser(summary);\n                    setupStorage(summary);\n                    setDialogOption(0);\n                }).catch(() => {\n                    console.log('Cannot parse json!\\n' + res);\n                });\n        }\n\n        function loginFailed(res: globalThis.Response) {\n            setLogging(false);\n            alert('login failed');\n        }\n\n        function getLoginInfo(): UserInfo {\n            let newUser = fakeUser();\n\n            const emailInput = getEmailInput();\n            if (!emailInput) return newUser;\n\n            const passwordInput = getPasswordInput(0);\n            if (!passwordInput) return newUser;\n\n            newUser.email = emailInput;\n            newUser.password = passwordInput;\n\n            return newUser;\n        }\n\n        return (\n            <div className='box'>\n                <a className='close' onClick={() => setDialogOption(0)}>&times;</a>\n                <h2>Login</h2>\n                <input type='email' ref={email} name='email' placeholder='Email' autoComplete='off' required />\n                <input type='password' ref={password} name='passwd' placeholder='Password' required />\n                <div className='btns'>\n                    {!logging && <button onClick={() => login()}>Submit</button>}\n                    {logging && <button disabled className='disabled'>Submit</button>}\n                    <button onClick={() => setDialogOption(2)}>Sign up</button>\n                </div>\n                <div className='other'><a href='#'>Forget your password?</a></div>\n            </div>\n        );\n    }\n    \n    function RegisterForm() {\n        const [submitting, setSubmitting] = useState(false);\n\n        function submit() {\n            const newUser = getRegisterInfo();\n            if (!newUser.email || !newUser.password) return;\n            setSubmitting(true);\n            postRequest(BaseUrl + 'user/register', JSON.stringify(newUser),\n                    registerDone, registerFailed);\n        }\n\n        function registerDone() {\n            setSubmitting(false);\n            alert('Register successfully!');\n            setDialogOption(1);\n        }\n\n        function registerFailed() {\n            setSubmitting(false);\n            alert('Register failed!');\n        }\n\n        function getRegisterInfo(): UserInfo {\n            let newUser = fakeUser();\n\n            const emailInput = getEmailInput();\n            if (!emailInput) return newUser;\n\n            const passwordInput = getPasswordInput(1);\n            if (! passwordInput) return newUser;\n\n            newUser.email = emailInput;\n            newUser.password = passwordInput;\n\n            if (uname && uname.current && uname.current.value){\n                newUser.uname = uname.current.value;\n            } else {\n                newUser.uname = 'Anonymous';\n            }\n\n            return newUser;\n        }\n\n        return (    \n            <div className='box'>\n                <a className='close' onClick={() => setDialogOption(0)}>&times;</a>\n                <h2>Sign up</h2>\n                <input title='Fake email is allowed if you do not need advanced features.' type='email' ref={email} name='email' placeholder='Email' autoComplete='off' required />\n                <input title='No less than 8 and has at least one digit and one character.' type='password' ref={password} name='password' placeholder='Password' required />\n                <input title='Same with password.' type='password' ref={repeatPassword} name='repeat_passwd' placeholder='Repeat password' required />\n                <input type='text' ref={uname} name='nickname' autoComplete='off' placeholder='Nickname (optional)' />\n                <div className='btns'>\n                    {submitting && <button disabled className='disabled'>Submit</button>}\n                    {!submitting && <button onClick={() => submit()} >Submit</button>}\n                    <button onClick={() => setDialogOption(1)}>Login</button>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, {useState, useEffect} from 'react';\nimport {PageOptionProps} from '../lib/interfaces';\nimport Draft from '../components/draft';\nimport PostList from '../components/postlist';\nimport Panel from '../components/panel';\nimport { isNull } from 'util';\n\n\n/**\n * @param props: contains a number 'op' that represents which page to show.\n * op === 0 means '/', 1 means '/posts', 2 means '/marks', and maybe more later.\n */\nexport default function Home(props: PageOptionProps) {\n    const [op, setOp] = useState(props.op);\n\n    useEffect(() => {\n        let newOp = props.op;\n        if (newOp === undefined || newOp > 4 || newOp < 0) {\n            console.error('Invalid op value: ' + newOp);\n            return;\n        }\n            \n        setOp(props.op);\n    }, [props]);\n\n    return (\n        <main>\n            <div id=\"wrapper\">\n                <article>\n                    {op === 0 && <Draft />}\n                    <PostList op={op}/>\n                </article>\n                <Panel/>\n            </div>\n        </main>\n    );\n}\n","import React, {useState, useContext, ChangeEvent} from 'react';\nimport {postRequest, BaseUrl, setupStorage} from '../lib/utils';\nimport {UserInfo} from '../lib/interfaces';\nimport { UserContext } from './context';\nimport './settings.css';\n\nexport default function Settings() {\n    const userCtx = useContext(UserContext);\n    const [user] = useState(userCtx.user);\n    const [nickname, setNickname] = useState(user.uname);\n    const [oldPassword, setOldPassword] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [repeatPassword, setRepeatPassword] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>, func: Function) {\n        func(event.target.value);\n    }\n\n    function submitNewNickname() {\n        if (nickname === user.uname) {\n            alert('Same with old nickname.');\n            return;\n        }\n        let body = {\"uname\": nickname};\n        setLoading(true);\n        postRequest(BaseUrl + 'user/' + user.uid + '/uname', JSON.stringify(body),\n            handleRequestDone, handleRequestFail);\n    }\n\n    function submitNewPassword() {\n        if (!checkPassword(oldPassword) || !checkPassword(newPassword) || !checkPassword(repeatPassword)) {\n            alert('Password format error, please check your input.');\n            return;\n        }\n        if (newPassword !== repeatPassword) {\n            alert('New passwords not match.');\n            return;\n        }\n\n        let body = {\"oldPassword\": oldPassword, \"newPassword\": newPassword};\n        setLoading(true);\n        postRequest(BaseUrl + 'user/' + user.uid + '/password', JSON.stringify(body),\n            changePasswordDone, changePasswordDone);\n    }\n\n    function checkPassword(password: string): boolean {\n        if (!password) return false;\n        if (!/^\\S{8,64}$/.test(password)) return false;\n        if (!/\\d+/.test(password) || !/[a-zA-Z]+/.test(password)) return false;\n\n        return true;\n    }\n\n    function changePasswordDone(res: globalThis.Response) {\n        res.text()\n            .then((result: string) => {\n                setLoading(false);\n                alert(result);\n            })\n    }\n\n    function handleRequestDone(res: globalThis.Response) {\n        res.json()\n            .then((summary: UserInfo )=> {\n                userCtx.setUser(summary);\n                setupStorage(summary);\n                setLoading(false);\n                alert('Done');\n            })\n    }\n\n    function handleRequestFail(res: globalThis.Response) {\n        setLoading(false);\n        setNickname(user.uname);\n        alert('Error happened.');\n    }\n\n    return (\n        <div id=\"setting\">\n            <h3>{user.email}</h3>\n            <label>Nickname:</label> \n            <input value={nickname} onChange={(e) => handleInputChange(e, setNickname)}/>\n            <div>\n                {!loading && <button onClick={() => submitNewNickname()}>Submit</button>}\n                {loading && <button disabled>Submit</button>}\n                <div className='tooltip'>Nickname rules?\n                    <span className='tooltiptext'>\n                        1. No longer than 32 characters;<br/>\n                        2. Only alphanumeric, underscore and blank space allowed.\n                    </span>\n                </div>\n            </div>\n            <hr/>\n            <label>Old password:</label>\n            <input type='password' value={oldPassword} onChange={(e) => handleInputChange(e, setOldPassword)}/>\n            <label>New password:</label>\n            <input type='password' value={newPassword} onChange={(e) => handleInputChange(e, setNewPassword)} />            \n            <label>Repeat new password:</label>\n            <input type='password' value={repeatPassword} onChange={(e) => handleInputChange(e, setRepeatPassword)} />\n            <div>\n                {!loading && <button onClick={() => submitNewPassword()}>Submit</button>}\n                {loading && <button disabled>Submit</button>}\n                <div className='tooltip'>Password rule?\n                    <span className='tooltiptext'>\n                        1. Must be longer than 8; <br/>\n                        2. Has at least one character and one digit.\n                        3. Whitespace is not allowed.\n                    </span>\n                </div>\n            </div>\n            <hr />\n            <label>Account setting:</label><p/>\n            <div>\n                <button disabled>Validate Email</button>\n                <button className='right' disabled>DELETE ACCOUNT</button>\n            </div>\n        </div>\n    );\n\n}","import React from 'react';\nimport {Link, useParams} from 'react-router-dom';\n\nexport default function About() {\n    const {type} = useParams();\n    console.log('type is ' + type);\n\n    return (\n        <main>\n            <div id='wrapper'>\n                <article>\n                    {type === 'cookie' && <CookiePolicy />}\n                    {type === 'why-masq' && <WhyMasq />}\n                </article>\n\n            </div>\n        </main>\n    )\n}\n\nfunction CookiePolicy() {\n    return (\n        <div>\n            <div className='title'>Cookie Policy</div>\n            <div className='subtitle'>About Cookie</div> \n            <p>A cookie is a small piece of text stored in your computer which helps the website to remember information about your visit.\n            It could help to improve the experience of using the web.</p>\n            \n            <div className='subtitle'>How Masq uses cookies </div>\n            <p>Three cookies are used in Masq.xyz: </p>\n            <li><span className='code'>first</span>: used to display the cookie-policy for the fist-time visitors.   </li>\n            <li><span className='code'>JSESSIONID</span>: used to remember the current session between your computer and our server. This cookie expires after 20 minutes of the last activity between you and the website. </li>\n            <li><span className='code'>u</span>: used to remember whether you have logged in. It lives for 7 days so you don't need to re-login within that period as long as you use the same browser on the same device. </li>\n            <p>Masq.xyz doen's not use any of its cookies to track your information across sites.</p>\n            <div className='subtitle'>What if I turn of cookies</div>\n            <p>Everything still works fine except you cannot log in or use features that required login, such as changing setting and search.</p>\n        </div>\n    );\n}\n\nfunction WhyMasq() {\n    return (\n        <div>\n            <div className='title'>Why Masq</div>\n            <div className='subtitle'>Privacy</div> \n            <p> As an anonymous social platform, you do not need to give us any real information, eg. your email, name, etc. and you can change your nickname anytime you want. No user can read your posts unless you make them public, nor can another user track your posting history.</p>\n            <div className='subtitle'>Security</div>\n            <p>The cookie usage is limited at a very minimal level, <Link to='/about/cookie'>as described here</Link>. The whole project is open sourced on <a href='https://github.com/machengim/square'>github</a>.</p>\n        </div>\n    );\n}","import React, {useState, useEffect, useContext} from 'react';\nimport {Link} from 'react-router-dom';\nimport {clearStorage, request, BaseUrl} from '../lib/utils';\nimport './header.css';\nimport { UserContext } from './context';\n\nexport default function Header() {\n    const userCtx = useContext(UserContext);\n    const [keyword, setKeyword] = useState('');\n    const [path, setPath] = useState('');\n    const [readonly, setReadonly] = useState(true);\n\n    useEffect(() => {\n        if (keyword) setPath('/search/' + keyword);\n    }, [keyword]);\n\n    function changeInput(e: React.ChangeEvent<HTMLInputElement>) {\n        let keyword = e.target.value;\n        setKeyword(keyword);\n    }\n\n    function monitorKeyPress(e: React.KeyboardEvent) {\n        let code = e.keyCode || e.which;\n        if (code === 13 && userCtx.user.uid > 0) {\n            let search = document.getElementById('search');\n            if (search) search.click();\n            setKeyword('');\n        } else if (code === 13) {\n            alert('Only logged user can search for posts.');\n        }\n    }\n\n    function logOut() {\n        if (!userCtx.user.uid || userCtx.user.uid <= 0) {\n            alert('You have not logged in.');\n            return;\n        }\n\n        let confirm = window.confirm('Confirm to log out?');\n        if (confirm) {\n            request(BaseUrl + 'user/logout', logoutDone, logoutError);\n        } \n    }\n\n    function logoutDone(res: globalThis.Response) {\n        res.text().then((text: string) => {\n            if (text.includes('Success')) {\n                clearStorage();\n                window.location.href = '/';\n            } else {\n                alert('Logout failed, please try again.');\n            }\n        }).catch(() => {\n            alert('Logout failed, please try again.');\n        })\n    }\n\n    function logoutError() {\n        alert('Logout failed, please try again.');\n    }\n\n    return (\n        <header>\n            <nav>\n                <div id='nav_logo'>Masq</div>\n                <div id='nav_items'>\n                    <ul>\n                        <li><Link to='/'>Home</Link></li>\n                        <li><Link to='/trending'>Trending</Link></li>\n                        <li><Link to='/setting'>Setting</Link></li>\n                        <li><Link to='/about/why-masq'>About</Link></li>\n                        <li><a onClick={() => logOut()}>Quit</a></li>\n                        <li><Link id='search' to={path} /></li>\n                    </ul>\n                </div>\n                <div id='nav_search'>\n                    <input id='search' autoComplete='off' placeholder='Search' value={keyword} onChange={(e) => changeInput(e)} onKeyPress={(e) => monitorKeyPress(e)} />\n                </div>\n            </nav>\n        </header>\n    );\n\n}","import React, {useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport Cookie from 'js-cookie';\n\n// css in '../index.css'.\nexport default function Footer() {\n    const start = 2020;\n    const current = new Date().getFullYear();\n    const text = (current > start)? start + '-' + current: start;\n    const site = 'Masq.xyz';\n    const [showNote, setShowNote] = useState(Cookie.get('first') === undefined);\n\n    Cookie.set('first', 'f');\n\n    return (\n        <>        \n            <footer>\n                Copyright {site} {text} test version.\n            </footer>\n            {showNote && <FootNote onClose={() => setShowNote(false)} />}\n        </>\n    );\n}\n\nfunction FootNote(props: any) {\n\n    let handleClose = props.onClose;\n\n    return (\n        <div id='foot-note'>\n            <span className=\"close\" onClick={() => handleClose()}>&times;</span><br/>\n            This website is in test version. All data and inputs may be cleared.<br />\n            We use cookie. Check our <Link to='/about/cookie' onClick={() => handleClose()}>cookie policy</Link> for more information.\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\nimport Home from './pages/home';\nimport Setting from './pages/setting';\nimport About from './pages/about';\nimport PageNotFound from './pages/404';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport {UserProvider, AppProvider} from './components/context';\nimport './index.css';\n\n\nReactDOM.render(\n    <AppProvider>\n    <UserProvider>\n        <div className='hidden'>\n            <input type=\"text\" /><input type=\"password\" />\n        </div>\n        <BrowserRouter>\n            <Header />\n            <Switch>\n                <Route exact path='/' component={() => <Home op={0} />}/>\n                <Route exact path='/posts' component={() => <Home op={1} />}/>\n                <Route exact path='/marks' component={() => <Home op={2} />}/>\n                <Route exact path='/search/:keyword' component={() => <Home op={3} />}/>\n                <Route exact path='/trending' component={() => <Home op={4} />} />\n                <Route exact path='/setting' component={Setting} />\n                <Route exact path='/about/:type' component={About} />\n                <Route component={PageNotFound} />\n            </Switch>\n            <Footer />\n        </BrowserRouter>\n    </UserProvider>\n    </AppProvider>,\n    document.getElementById('root')\n);\n","import React, { useContext } from 'react';\nimport { UserContext } from '../components/context';\nimport Settings from '../components/settings';\n\nexport default function Setting() {\n    const userCtx = useContext(UserContext);\n\n    return (\n        <main>\n            <div id='wrapper'>\n                {userCtx.user.uid > 0 && <Settings />}\n                {userCtx.user.uid <= 0 && <div>Sorry, you haven't logged in.</div>}\n            </div>\n        </main>\n    );\n}","import React from 'react';\n\nexport default function PageNotFound() {\n    return (\n        <main>\n            <div id='wrapper'>\n                Page not found!\n            </div>\n        </main>\n    );\n}"],"sourceRoot":""}